// <auto-generated />
using Geo.Monitoring.DocumentService.Persistent;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Geo.Monitoring.DocumentService.Persistent.Migrations
{
    [DbContext(typeof(DocumentDbContext))]
    [Migration("20230623191132_AddSize")]
    partial class AddSize
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Geo.Monitoring.DocumentService.Domain.Document", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<byte[]>("Content")
                        .IsRequired()
                        .HasColumnType("MEDIUMBLOB");

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasColumnType("TINYTEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TINYTEXT");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("Geo.Monitoring.DocumentService.Domain.DocumentLabel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("DocumentId")
                        .HasColumnType("int");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR");

                    b.HasKey("Id");

                    b.HasIndex("DocumentId");

                    b.HasIndex("Label");

                    b.ToTable("Labels");
                });

            modelBuilder.Entity("Geo.Monitoring.DocumentService.Domain.DocumentLabel", b =>
                {
                    b.HasOne("Geo.Monitoring.DocumentService.Domain.Document", "Document")
                        .WithMany("Labels")
                        .HasForeignKey("DocumentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Document");
                });

            modelBuilder.Entity("Geo.Monitoring.DocumentService.Domain.Document", b =>
                {
                    b.Navigation("Labels");
                });
#pragma warning restore 612, 618
        }
    }
}
